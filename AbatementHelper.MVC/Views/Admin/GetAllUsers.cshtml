@model PagedList.IPagedList<AbatementHelper.CommonModels.WebApiModels.WebApiUser>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />




@{
    ViewBag.Title = "GetAllUsers";
}



<h2>All Users</h2>

<p>
    @Html.ActionLink("Create New", "CreateUser")
</p>

@using (Html.BeginForm("GetAllUsers", "Admin", FormMethod.Get))
{
    <p>
        Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}

<table class="table">
    <tr>
        <th>
            @Html.ActionLink("UserName", "GetAllUsers", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            FirstName
        </th>
        <th>
            LastName
        </th>
        <th>
            Email
        </th>
        <th>
            EmailConfirmed
        </th>
        <th>
            PhoneNumber
        </th>
        <th>
            PhoneNumberConfirmed
        </th>
        <th>
            Country
        </th>
        <th>
            City
        </th>
        <th>
            PostalCode
        </th>
        <th>
            Street
        </th>
        <th>
            Role
        </th>
        <th>
            TwoFactorEnabled
        </th>
        <th>
            Approved
        </th>
        <th>
            Deleted
        </th>
        <th></th>
    </tr>
    @if (Model != null)
    {
        foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.UserName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EmailConfirmed)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PhoneNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PhoneNumberConfirmed)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Country)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.City)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PostalCode)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Street)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Role)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TwoFactorEnabled)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Approved)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Deleted)
                </td>
                <td>
                    @if (item.Deleted != true)
                    {
                        @Html.ActionLink("Edit", "EditUser", new { id = item.Id })
                        @Html.ActionLink("Details", "UserDetails", new { id = item.Id })
                        @Html.ActionLink("Delete", "DeleteUser", new { id = item.Id })
                    }
                    else
                    {
                        @Html.ActionLink("Restore", "RestoreUser", new { id = item.Id });
                    }
                </td>
            </tr>
        }
    }

</table>

<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("GetAllUsers",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
