@model IEnumerable<AbatementHelper.CommonModels.Models.DataBaseStore>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Id)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.UserName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Email)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.EmailConfirmed)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PhoneNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PhoneNumberConfirmed)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Country)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.City)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PostalCode)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Street)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.WorkingHoursWeek)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.WorkingHoursWeekends)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.WorkingHoursHolidays)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Role)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Approved)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TwoFactorEnabled)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AccessFailedCount)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.MasterStoreID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Deleted)
        </th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Id)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.UserName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Email)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.EmailConfirmed)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PhoneNumber)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PhoneNumberConfirmed)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Country)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.City)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PostalCode)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Street)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.WorkingHoursWeek)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.WorkingHoursWeekends)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.WorkingHoursHolidays)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Role)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Approved)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TwoFactorEnabled)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.AccessFailedCount)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.MasterStoreID)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Deleted)
        </td>
        <td>
            @Html.ActionLink("Edit", "EditStore", new { id = item.Id }) |
            @Html.ActionLink("Details", "Details", new { id = item.Id }) |
            @{
                if (item.Deleted)
                {
                    @Html.ActionLink("Restore", "Restore", new { id = item.Id }, new { role = item.Role });
                }
                else if (!item.Deleted)
                {
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { role = item.Role });
                }
            }
        </td>
    </tr>
}

</table>
