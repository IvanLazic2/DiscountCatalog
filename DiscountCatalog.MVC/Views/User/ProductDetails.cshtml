@model DiscountCatalog.MVC.REST.Product.ProductREST
@{
    ViewBag.Title = "ProductDetails";
}

<div id="product-info">
    <h2 style="display: inline">@Model.ProductName</h2>
</div>

<hr />

<div class="main-details-window">
    <div class="product-image-container">
        <div class="card-image" style="background-image: url(data:image/gif;base64,@Convert.ToBase64String(Model.ProductImage));">
        </div>
    </div>

    <div class="product-info-container">

        <h4><span class="glyphicon glyphicon-info-sign"></span> Product info</h4>

        <dl class="dl-horizontal">
            <dt>
                Product name
            </dt>
            <dd>
                @Html.DisplayFor(model => model.ProductName)
            </dd>
            <dt>
                Company name
            </dt>
            <dd>
                @Html.DisplayFor(model => model.CompanyName)
            </dd>
        </dl>

        <h4><span class="glyphicon glyphicon-usd"></span> Price</h4>

        <dl class="dl-horizontal">
            <dt>
                Old price
            </dt>
            <dd>
                @Html.DisplayFor(model => model.OldPrice) @Html.DisplayFor(model => model.Currency)
            </dd>
            <dt>
                New Price
            </dt>
            <dd>
                @Html.DisplayFor(model => model.NewPrice) @Html.DisplayFor(model => model.Currency)
            </dd>
            <dt>
                Discount percentage
            </dt>
            <dd>
                @Html.DisplayFor(model => model.DiscountPercentage)%
            </dd>
        </dl>

        <h4><span class="glyphicon glyphicon-calendar"></span> Date</h4>

        <dl class="dl-horizontal">
            <dt>
                Discount date
            </dt>
            <dd>
                @Html.DisplayFor(model => model.DiscountDateBegin) - @Html.DisplayFor(model => model.DiscountDateEnd)
            </dd>
        </dl>

        <h4><span class="glyphicon glyphicon-book"></span> Other</h4>

        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.Quantity)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Quantity) @Html.DisplayFor(model => model.MeasuringUnit)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Description)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Description)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Note)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Note)
            </dd>

        </dl>

        <h4><span class="glyphicon glyphicon-shopping-cart"></span> Store</h4>
        <a href="@Url.Action("StoreDetails", "User", new { id = Model.Store.Id })">
            <div id="store-info" style="margin: 20px 0 20px 100px">
                <div class="avatar" style="background-image: url(data:image/gif;base64,@Convert.ToBase64String(Model.Store.StoreImage)"></div>
                <h2 style="font-size: 20px">@Model.Store.StoreName</h2>
            </div>
        </a>

    </div>
</div>

<hr />

<p>
    <a href="@Url.Action("GetAllProducts", "User")" class="btn btn-default"><span class="glyphicon glyphicon-chevron-left"></span> Back to list</a>
</p>

@Styles.Render("~/Content/IndividualPageStyles/Common")
@Styles.Render("~/Content/IndividualPageStyles/Details")
@Scripts.Render("~/Scripts/IndividualPageScripts/Details")

