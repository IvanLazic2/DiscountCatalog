@model DiscountCatalog.MVC.REST.Manager.ManagerRESTPost

@{
    ViewBag.Title = "CreateManager";
}


<h2>Create a Manager</h2>

<hr />

@using (Html.BeginForm("CreateManager", "StoreAdmin", FormMethod.Post, new { enctype = "multipart/form-data", id = "image-form" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="image-form-container">
        <p>Upload a new image:</p>
        <label class="btn btn-primary" id="browse-button" for="default-file-browse"><span class="glyphicon glyphicon-folder-open"></span> Browse...</label>
        <input id="default-file-browse" type="file" name="file" onchange="PreviewImage();" />
        <br>
        <img id="uploadedPreview" alt="">
        <br>
        <div id="form-actions">
            <button class="btn btn-danger" id="cancel" type="button" onclick="Clear();"><span class="glyphicon glyphicon-remove"></span> Cancel </button>
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Email", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.Identity.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessage("Email", "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("First name", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.Identity.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Identity.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Last name", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.Identity.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Identity.LastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Password", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Identity.Password, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Identity.Password, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Confirm password", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.Identity.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Identity.ConfirmPassword, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-4">
            <button type="submit" class="btn btn-primary"><span class="glyphicon glyphicon-save"></span> Create</button>
        </div>
    </div>
</div>
}

<div>
    <a href="@Url.Action("GetAllManagers", "StoreAdmin")" class="btn btn-default"><span class="glyphicon glyphicon-chevron-left"></span> Back</a>
</div>

@Styles.Render("~/Content/IndividualPageStyles/Create")
@Scripts.Render("~/Scripts/IndividualPageScripts/Create")

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
