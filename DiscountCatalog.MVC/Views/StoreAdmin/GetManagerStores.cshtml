@model PagedList.IPagedList<DiscountCatalog.Common.Models.ManagerStore>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "GetManagerStores";
}

@*<h2>Assign or unassign stores for @Model.ToList().First().Manager.UserName</h2>*@

<h2>Assign or unassign stores for @ViewBag.ManagerUserName</h2>

@using (Html.BeginForm("GetAManagerStores", "StoreAdmin", FormMethod.Get))
{
    <p>
        Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}

<table class="table">
    <tr>
        <th>
            @Html.ActionLink("StoreName", "GetManagerStores", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            Country
        </th>
        <th>
            City
        </th>
        <th>
            PostalCode
        </th>
        <th>
            Street
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Store.StoreName)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.Store.Country)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Store.City)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Store.PostalCode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Store.Street)
            </td>
            <td>
                @if (item.Assigned)
                {
                    @Html.ActionLink("Unassign", "Unassign", new { managerId = item.Manager.Id, storeId = item.Store.Id })
                }
                else
                {
                    @Html.ActionLink("Assign", "Assign", new { managerId = item.Manager.Id, storeId = item.Store.Id })
                }
            </td>
        </tr>

    }

</table>



@Html.ActionLink("Back to the list", "GetAllManagers")

<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("GetManagerStores",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


