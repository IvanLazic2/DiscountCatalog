@model PagedList.IPagedList<DiscountCatalog.Common.WebApiModels.WebApiStore>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "GetAllStores";
}

<h2>All Users</h2>

<p>
    @Html.ActionLink("Create New", "CreateStore")
</p>

@using (Html.BeginForm("GetAllStores", "Admin", FormMethod.Get))
{
    <p>
        Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}

    <table class="table">
        <tr>
            <th>
                @Html.ActionLink("StoreName", "GetAllStores", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                Country
            </th>
            <th>
                City
            </th>
            <th>
                PostalCode
            </th>
            <th>
                Street
            </th>
            <th>
                Approved
            </th>
            <th>
                Deleted
            </th>
            <th></th>
        </tr>
        @if (Model != null)
        {
            foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.StoreName)
                    </td>
                    @* working hours *@
                    <td>
                        @Html.DisplayFor(modelItem => item.Country)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.City)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PostalCode)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Street)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Approved)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Deleted)
                    </td>
                    <td>
                        @if (!item.Deleted)
                        {
                            @Html.ActionLink("Edit", "EditStore", new { id = item.Id })
                            @Html.ActionLink("Details", "StoreDetails", new { id = item.Id })
                            @Html.ActionLink("Delete", "DeleteStore", new { id = item.Id })
                        }
                        else
                        {
                            @Html.ActionLink("Restore", "RestoreStore", new { id = item.Id });
                        }
                    </td>
                </tr>
            }
        }

    </table>

<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("GetAllStores",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
