@model PagedList.IPagedList<DiscountCatalog.MVC.REST.Product.ProductREST>
@using PagedList.Mvc
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
<link href="~/Content/product-card.css" rel="stylesheet" />

@{
    ViewBag.Title = "GetAllProducts";
}

<h2>All products</h2>

<p>
    @Html.ActionLink("Create New", "CreateProduct")
</p>
<hr />

@using (Html.BeginForm("GetAllProducts", "Store", FormMethod.Get))
{
    <p>
        Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}

<div class="container">
    <table>
        <tr>
            Sort by:
            <th>
                @Html.ActionLink("Name", "GetAllProducts", new { sortOrder = ViewBag.NameSortParm }),
            </th>
            <th>
                @Html.ActionLink("Price", "GetAllProducts", new { sortOrder = ViewBag.PriceSortParm })
            </th>
        </tr>
    </table>
</div>

<div class="container">
    <div class="row" id="products">
        <!-- Category Card -->
        @foreach (var item in Model)
        {
            <div class="col-md-4">
                <div class="card rounded">
                    <div class="card-image">
                        @*<span class="card-notify-badge"></span>*@
                        <span class="card-notify-year">@item.DiscountPercentage%</span>
                        <img class="img-fluid" src="@Url.Action("GetProductImage", "Store", new { id = item.Id })" alt="Alternate Text" />
                    </div>
                    <div class="card-image-overlay m-auto">
                        <span class="card-detail-badge" style="text-decoration: line-through">@item.OldPrice @item.Currency</span>
                        <span class="card-detail-badge">@item.NewPrice @item.Currency</span>

                    </div>
                    <div class="card-body text-center">
                        <div class="p-title m-auto">
                            <h5>@item.ProductName</h5>
                        </div>
                        @*<a class="p-btn" href="#">View</a>*@
                        @Html.ActionLink("Details", "ProductDetails", new { id = item.Id }, new { @class = "p-btn" })
                    </div>
                    <div class="card-footer">

                        @Html.ActionLink("Edit", "EditProduct", new { id = item.Id })
                        @Html.ActionLink("Delete", "DeleteProduct", new { id = item.Id })
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("GetAllProducts",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}